#include<bits/stdc++.h>
using namespace std;

    long long int dp[1000][1000];                               
    int func(string &s1,string &s2,int n,int m)
    {
        if(n == -1 || m == -1)
            return 0;
        if(dp[n][m] != -1)
            return dp[n][m];
        if(s1[n] == s2[m])
            return dp[n][m] = 1 + func(s1,s2,n-1,m-1);

        int a = func(s1,s2,n-1,m);
        int b = func(s1,s2,n,m-1);

        return dp[n][m] = max(a,b);

    }

    int lcs(string s1,string s2,int n,int m)
    {
        memset(dp,-1,sizeof(dp));
        return func(s1,s2,n-1,m-1);
    }


    int main()
    {
        int n,m;
        cin>>n>>m;
        string s1,s2;
        cin>>s1>>s2;

        cout<<lcs(s1,s2,n,m);
    }
